name: Continuous master build

on:
  push:
    branches:
      - master

jobs:
  clippy:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: target/
          key: cargo-clippy-cache-${{ matrix.arch.target }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-01-05
          override: true
          components: clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy

  test:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    strategy:
      matrix:
        arch:
          - { name: 'x86_64', os: 'ubuntu-20.04', target: 'x86_64-unknown-linux-gnu', cross: false }
    runs-on: ${{ matrix.arch.os }}
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        ports:
          - 3306:3306
    steps:
      - name: Install dependencies
        run: sudo apt install -y libcap-dev libjq-dev libonig-dev
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: target/
          key: cargo-test-cache-${{ matrix.arch.target }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-01-05
          override: true
      - name: Test suite
        run: sudo capsh --caps='cap_net_raw+eip cap_setpcap,cap_setuid,cap_setgid+ep' --keep=1 --user=runner --addamb=cap_net_raw -- -c "PATH=$PATH HOME=/home/runner JQ_LIB_DIR=/usr/lib/x86_64-linux-gnu DSN=mysql://root:${{ secrets.MYSQL_ROOT_PASSWORD }}@127.0.0.1/information_schema?ssl-mode=DISABLED cargo test --all-features"

  build:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    strategy:
      matrix:
        arch:
          - { name: 'x86_64', os: 'ubuntu-20.04', target: 'x86_64-unknown-linux-gnu', cross: false }
    runs-on: ${{ matrix.arch.os }}
    steps:
      - name: Install dependencies
        run: sudo apt install -y libcap-dev libjq-dev libonig-dev
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: target/
          key: cargo-build-cache-${{ matrix.arch.target }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-01-05
          override: true
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features --target=${{ matrix.arch.target }}
          use-cross: ${{ matrix.arch.cross }}
        env:
          JQ_LIB_DIR: /usr/lib/x86_64-linux-gnu
      - name: Rename artifact
        run: |
          mv target/${{ matrix.arch.target }}/release/defcon target/${{ matrix.arch.target }}/release/defcon-tip-${{ matrix.arch.name }}
          mv target/${{ matrix.arch.target }}/release/defcon-runner target/${{ matrix.arch.target }}/release/defcon-runner-tip-${{ matrix.arch.name }}
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: defcon-tip-${{ matrix.arch.name }}
          path: |
            target/${{ matrix.arch.target }}/release/defcon-tip-${{ matrix.arch.name }}
            target/${{ matrix.arch.target }}/release/defcon-runner-tip-${{ matrix.arch.name }}

  doc:
    runs-on: ubuntu-20.04
    needs: [clippy, test, build]
    steps:
      - uses: actions/checkout@v2
      - name: Install mdbook
        uses: peaceiris/actions-mdbook@v1
        with:
          mdbook-version: '0.4.6'
      - name: Build user manual
        run: mdbook build docs/
      - name: Build API documentation
        uses: seeebiii/redoc-cli-github-action@v10
        with:
          args: bundle -o docs/book/api.html docs/api/openapi.yml
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/book/

  package:
    runs-on: ubuntu-20.04
    needs: [clippy, test, build]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: target/out
      - name: Create release
        uses: eine/tip@tip
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: target/out/*/*
          rm: true
